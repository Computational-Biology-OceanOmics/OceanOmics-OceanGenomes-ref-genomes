/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC_HIFI {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqc_hifi" }
        ]
    }

    withName: 'HIFIADAPTERFILT' {     
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/hifiadaptfilt" }
        ]
    }

    withName: CAT_HIC {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqs_hic" }
        ]
    }

    withName: FASTQC_HIC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqc_hic" }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MERYL_COUNT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" }
        ]

    }

    withName: 'MERYL_HISTOGRAM' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" }
        ]

    }
    withName: 'GENOMESCOPE2' {
        ext.args = {'--testing' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/genomescope2" }
        ]
    }

    withName: 'HIFIASM' {
        ext.args = { '--primary' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/hifiasm" }
        ]
    }

    withName: 'GFASTATS_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats_hap1" }
        ]
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'GFASTATS_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats_hap2" }
        ]
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'BUSCO_BUSCO' {
        ext.args = { '--miniprot' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/busco" }
        ]
    }

    withName: 'BUSCO_GENERATEPLOT' {
            publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/busco" }
        ]
    }

    withName: 'MERQURY' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/merqury" }
        ]
    }
    withName: 'CUT' {
        ext.args = '-f1,2'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
    }

    withName: 'FCS_FCSGX' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/NCBI" }
        ]
    }

withName: 'BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
}

    withName: 'BWA_MEM' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
        ext.args = [
            "-5SP",
            "-T0"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_PARSE' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
        ext.args = [
            "--min-mapq 0",
            "--walks-policy 5unique",
            "--max-inter-align-gap 30",
            "--nproc-in 32",
            "--nproc-out 32"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_DEDUP' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
        ext.args = [
            "--nproc-in 32",
            "--nproc-out 32",
            "--mark-dups"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_SPLIT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
        ext.args = [
            "--nproc-in 32",
            "--nproc-out 32"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_SORT' {
        ext.args = { '--nproc 32' }
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
    }
withName: 'SAMTOOLS_FAIDX'{
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
}

    withName: 'SAMTOOLS_SORT' {
        ext.args = { '-@32' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
    }

withName: 'SAMTOOLS_INDEX'{
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" }
        ]
}

    withName: 'YAHS_HAP1' {
        ext.args = { '--no-contig-ec' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/yahs" }
        ]
    }

    withName: 'YAHS_HAP2' {
        ext.args = { '--no-contig-ec' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/yahs" }
        ]
    }

        withName: 'CAT_SCAFFOLD' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/bbmap" }
        ]
    }

    withName: 'TIARA_TIARA_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/tiara" }
            ]
        ext.args = [
            "-m 1000",
            "--tf mit pla pro",
            "-p 0.65 0.60",
            "--probabilities"
        ]
        .join(' ').trim()
    }

    withName: 'TIARA_TIARA_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/tiara" }
        ]
        ext.args = [
            "-m 1000",
            "--tf mit pla pro",
            "-p 0.65 0.60",
            "--probabilities"
        ]
        .join(' ').trim()
    }

    withName: 'GFASTATS_FINAL' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/gfastats" }
            ]
        ext.args = [
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'BUSCO_BUSCO_FINAL' {
        ext.args = { '--miniprot' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/busco" }
            ]
    }

    withName: 'BUSCO_GENERATEPLOT_FINAL' {
        ext.args = { '-rt specific' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/busco" }
            ]
    }

    withName: 'TAR' {
        ext.args = { '-czvf' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" }
        ]
    }

    withName: 'MINIMAP2_ALIGN' {
        ext.args = [' -x map-hifi'
                    '-a'
                    '-I 16G'
                    ]
    }

    withName: 'BEDTOOLS_GENOMECOV' {
        ext.args = { '-bga' }
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/06-coverage-tracks/" }
        ]

}

    withName: 'TIDK' {
        ext.args = [ '--extension bedgraph'
                    '--distance 500000000', 
                    '--minimum ', 
                    '--maximum 12'
                    ]
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/07-telomers/" }
        ]
    }


    withName: 'PRETEXTMAP' {
        ext.args = [ '--sortby nosort' ]
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/" }
        ]

    }

    withName 'PRETEXTSNAPSHOT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/" }
        ]
    }

    withName: 'RCLONE' {
        ext.args = { '--checksum' }
        publishDir = [
            enabled: false
        ]
    }
}
