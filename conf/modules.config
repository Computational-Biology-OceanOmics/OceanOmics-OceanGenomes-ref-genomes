/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC_HIFI {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqc_hifi" },
            mode: params.publish_dir_mode
        ]
    }

    withName: HIFIADAPTERFILT {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/hifiadaptfilt" },
            mode: params.publish_dir_mode
        ]
    }

    withName: HIFIASM_SOLO {
        ext.args = { '--primary' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/hifi" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GFASTATS_HIFI_PRIMARY {
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats-hifi" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GFASTATS_HIFI_ALT {
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats-hifi" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CAT_HIC {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqs_hic" },
            mode: params.publish_dir_mode
        ]
    }

        withName: CAT_HIFI {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqs_cat_hifi" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTQC_HIC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastqc_hic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTP_HIC {
        ext.args = [ "--detect_adapter_for_pe",
                    "--cut_front",
                    "--cut_tail",
                    "--cut_window_size 4",
                    "--cut_mean_quality 20"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/fastp_hic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MERYL_COUNT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" },
            mode: params.publish_dir_mode
        ]

    }

    withName: 'MERYL_HISTOGRAM' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" },
            mode: params.publish_dir_mode
        ]

    }

    withName: 'GENOMESCOPE2' {
        ext.args = {'--testing' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/genomescope2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'HIFIASM' {
        ext.args = { '--primary' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/hifiasm" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'GFASTATS_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'GFASTATS_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/gfastats" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--discover-paths",
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'BUSCO_BUSCO' {
        ext.args = { '--miniprot' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BUSCO_GENERATEPLOT' {
        ext.args = { '-rt specific' }
            publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MERQURY' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/03-assembly/merqury" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'CUT' {
        ext.args = '-f1,2'
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/samtools" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'FCS_FCSGX_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/NCBI" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'FCS_FCSGX_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/NCBI" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'FCSGX_CLEANGENOME_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/cleangenome_hap1" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'FCSGX_CLEANGENOME_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/cleangenome_hap2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MITOHIFI_MITOHIFI' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/mtdna" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MITOHIFI_FINDMITOREFERENCE' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/01-data-processing/mtdna/MitoReference" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'CAT_FASTA' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'FQ_GZ_TO_FA' {
        publishDir = [
            enabled: false
        ]
    }

    withName: 'BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BWA_MEM' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "-5SP",
            "-T0"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_PARSE' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--min-mapq 0",
            "--walks-policy 5unique",
            "--max-inter-align-gap 30",
            "--nproc-in 32",
            "--nproc-out 32"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_DEDUP' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--nproc-in 32",
            "--nproc-out 32",
            "--mark-dups"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_SPLIT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--nproc-in 32",
            "--nproc-out 32"
        ]
        .join(' ').trim()
    }

    withName: 'PAIRTOOLS_SORT' {
        ext.args = { '--nproc 32' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'SAMTOOLS_FAIDX'{
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'SAMTOOLS_SORT' {
        ext.args = { '-@32' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: ' OMNIC_HAP1'{
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

        withName: ' OMNIC_HAP2'{
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/omnic" },
            mode: params.publish_dir_mode
        ]
    }

        withName: ' OMNIC_HAP1_FINAL'{
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/05-decontamination/omnic" },
            mode: params.publish_dir_mode
        ]
    }

        withName: ' OMNIC_HAP2_FINAL'{
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/05-decontamination/omnic" },
            mode: params.publish_dir_mode
        ]
    }


            withName: ' OMNIC_DUAL_HAP'{
        publishDir = [
        path: { "${params.outdir}/${meta.sample}/05-decontamination/omnic" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'YAHS_HAP1' {
        ext.args = { '--no-contig-ec' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/yahs" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'YAHS_HAP2' {
        ext.args = { '--no-contig-ec' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/04-scaffolding/yahs" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BAMTOBED_HAP1' {
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/salsa/bamtobed" },
        mode: params.publish_dir_mode
    ]
}

withName: 'BAMTOBED_HAP2' {
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/salsa/bamtobed" },
        mode: params.publish_dir_mode
    ]
}

// Add these entries for SALSA2 modules
withName: 'SALSA2_HAP1' {
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/salsa" },
        mode: params.publish_dir_mode
    ]
}

withName: 'SALSA2_HAP2' {
    publishDir = [
        path: { "${params.outdir}/${meta.sample}/04-scaffolding/salsa" },
        mode: params.publish_dir_mode
    ]
}

    withName: 'TIARA_TIARA_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/tiara" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "-m 1000",
            "--tf mit pla pro",
            "-p 0.65 0.60",
            "--probabilities"
        ]
        .join(' ').trim()
    }

    withName: 'TIARA_TIARA_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/tiara" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "-m 1000",
            "--tf mit pla pro",
            "-p 0.65 0.60",
            "--probabilities"
        ]
        .join(' ').trim()
    }

    withName: 'BBMAP_FILTERBYNAME_HAP1' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/final-fastas" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BBMAP_FILTERBYNAME_HAP2' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/final-fastas" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'CAT_SCAFFOLDS' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/final-fastas" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'GFASTATS_HAP1_FINAL' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/gfastats" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'GFASTATS_HAP2_FINAL' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/gfastats" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "--tabular",
            "--nstar-report"
        ]
        .join(' ').trim()
    }

    withName: 'BUSCO_BUSCO_FINAL' {
        ext.args = { '--miniprot' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BUSCO_GENERATEPLOT_FINAL' {
        ext.args = { '-rt specific' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/05-decontamination/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'TAR' {
        ext.args = { '-czvf' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/02-kmer-profiling/meryl" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MINIMAP2_ALIGN' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/06-coverage-tracks/" },
            mode: params.publish_dir_mode
        ]
        ext.args = [
            "-x map-hifi",
            "-a",
            "-I 16G"
        ]
        .join(' ').trim()
    }

    withName: 'BEDTOOLS_GENOMECOV' {
        ext.args = { '-bga' }
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/06-coverage-tracks/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'CAT_FASTQ' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/06-coverage-tracks/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'TIDK_EXPLORE' {
        ext.args =  [   
            "--distance 500000000",
            "--minimum 5",
            "--maximum 12"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/07-telomers/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'PRETEXTMAP' {
        ext.args = [
            "--sortby nosort",
            "--mapq 0" 
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'PRETEXTMAP2' {
        ext.args = [
            "--sortby nosort",
            "--mapq 0",
            "--highRes"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'PRETEXTSNAPSHOT' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/snapshot/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'PRETEXTGRAPH' {
        publishDir = [
            path: { "${params.outdir}/${meta.sample}/08-pretext/" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'RCLONE' {
        ext.args = { '--checksum' }
        publishDir = [
            enabled: false
        ]
    }
}
